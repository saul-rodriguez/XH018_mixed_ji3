// Library - IORING, Cell - ioring, View - schematic
// LAST TIME SAVED: Feb  7 11:24:12 2024
// NETLIST TIME: Feb  9 05:35:52 2024
`timescale 1ns / 1ps 

`worklib IORING
`view schematic

(* cds_ams_schematic *) 
(* dfII_lib="IORING", dfII_cell="ioring", dfII_view="schematic", worklib_name="IORING", view_name="schematic", last_save_time="Feb  7 11:24:12 2024" *)

module ioring (CLK, ENABLE, GNDA, GNDD, GNDHV, GNDOHV, GNDOR, GNDORA, 
    INL, OUT0, OUT1, OUT2, OUTHV, OUTL, PSUB, RESET, VDDA, VDDD, VDDHV, 
    VDDOR, VDDORA, clk_core, enable_core, inl_core, out0_core, 
    out1_core, out2_core, reset_core);

inout  CLK, ENABLE, GNDA, GNDD, GNDHV, GNDOHV, GNDOR, GNDORA, INL, 
    OUT0, OUT1, OUT2, OUTHV, OUTL, PSUB, RESET, VDDA, VDDD, VDDHV, 
    VDDOR, VDDORA, clk_core, enable_core, inl_core, out0_core, 
    out1_core, out2_core, reset_core;


VDDORPADPC I18 ( .PSUB(PSUB), .GNDRI(GNDORA), .VDD3I(VDDA), 
    .GNDI(GNDA), .VDDORI(VDDORA), .GNDOI(GNDORA));

VDDORPADPC I1 ( .PSUB(PSUB), .GNDRI(GNDOR), .VDD3I(VDDD), .GNDI(GNDD), 
    .VDDORI(VDDOR), .GNDOI(GNDOR));

VDDPADPC I21 ( .PSUB(PSUB), .VDD3I(VDDA), .GNDI(GNDA), .VDDRI(VDDOR), 
    .GNDOI(GNDORA), .VDDOI(VDDOR), .GNDRI(GNDORA));

VDDPADPC I3 ( .PSUB(PSUB), .VDD3I(VDDD), .GNDI(GNDD), .VDDRI(VDDOR), 
    .GNDOI(GNDOR), .VDDOI(VDDOR), .GNDRI(GNDOR));

GNDORPADPC I20 ( .VDDOI(VDDORA), .GNDI(GNDA), .VDD3I(VDDA), 
    .GNDORI(GNDORA), .VDDRI(VDDORA), .PSUB(PSUB));

GNDORPADPC I0 ( .VDDOI(VDDOR), .GNDI(GNDD), .VDD3I(VDDD), 
    .GNDORI(GNDOR), .VDDRI(VDDOR), .PSUB(PSUB));

PSUBPADPC I4 ( .VDDOI(VDDOR), .PSUB(PSUB), .VDD3I(VDDD), .GNDI(GNDD), 
    .VDDRI(VDDOR), .GNDOI(GNDOR), .GNDRI(GNDOR));

GNDPADPC I19 ( .PSUB(PSUB), .VDD3I(VDDA), .GNDI(GNDA), .VDDRI(VDDORA), 
    .GNDOI(GNDORA), .VDDOI(VDDORA), .GNDRI(GNDORA));

GNDPADPC I5 ( .PSUB(PSUB), .VDD3I(VDDD), .GNDI(GNDD), .VDDRI(VDDOR), 
    .GNDOI(GNDOR), .VDDOI(VDDOR), .GNDRI(GNDOR));

ICPC I11 ( .VDD3I(VDDD), .GNDI(GNDD), .GNDRI(GNDOR), .VDDRI(VDDOR), 
    .VDDOI(VDDOR), .PSUB(PSUB), .GNDOI(GNDOR), .Y(reset_core), 
    .PAD(RESET), .PI(GNDD), .PO(net4));

ICPC I10 ( .VDD3I(VDDD), .GNDI(GNDD), .GNDRI(GNDOR), .VDDRI(VDDOR), 
    .VDDOI(VDDOR), .PSUB(PSUB), .GNDOI(GNDOR), .Y(clk_core), .PAD(CLK), 
    .PI(GNDD), .PO(net3));

ICPC I9 ( .VDD3I(VDDD), .GNDI(GNDD), .GNDRI(GNDOR), .VDDRI(VDDOR), 
    .VDDOI(VDDOR), .PSUB(PSUB), .GNDOI(GNDOR), .Y(enable_core), 
    .PAD(ENABLE), .PI(GNDD), .PO(net1));

PWRCUTDCPC I35 ( .VDD3I1(net16), .GNDRI2(GNDOR), .VDDOI2(VDDOR), 
    .GNDOI2(GNDOR), .GNDI2(GNDD), .VDDRI2(VDDOR), .VDDOI1(net12), 
    .GNDOI1(GNDOHV), .VDDRI1(net15), .PSUB(net14), .VDD3I2(VDDD), 
    .GNDRI1(net11), .GNDI1(net10));

PWRCUTDCPC I34 ( .VDD3I1(VDDA), .GNDRI2(net5), .VDDOI2(net6), 
    .GNDOI2(GNDOHV), .GNDI2(net2), .VDDRI2(net8), .VDDOI1(VDDORA), 
    .GNDOI1(GNDORA), .VDDRI1(VDDORA), .PSUB(PSUB), .VDD3I2(net9), 
    .GNDRI1(GNDORA), .GNDI1(GNDA));

PWRCUTDCPC I12 ( .VDD3I1(VDDD), .GNDRI2(GNDORA), .VDDOI2(VDDORA), 
    .GNDOI2(GNDORA), .GNDI2(GNDA), .VDDRI2(VDDORA), .VDDOI1(VDDOR), 
    .GNDOI1(GNDOR), .VDDRI1(VDDOR), .PSUB(PSUB), .VDD3I2(VDDA), 
    .GNDRI1(GNDOR), .GNDI1(GNDD));

BT4PC I17 ( .PAD(OUT2), .A(out2_core), .EN(GNDD), .GNDRI(GNDOR), 
    .PSUB(PSUB), .VDD3I(VDDD), .GNDI(GNDD), .GNDOI(GNDOR), 
    .VDDOI(VDDOR), .VDDRI(VDDOR));

BT4PC I16 ( .PAD(OUT1), .A(out1_core), .EN(GNDD), .GNDRI(GNDOR), 
    .PSUB(PSUB), .VDD3I(VDDD), .GNDI(GNDD), .GNDOI(GNDOR), 
    .VDDOI(VDDOR), .VDDRI(VDDOR));

BT4PC I15 ( .PAD(OUT0), .A(out0_core), .EN(GNDD), .GNDRI(GNDOR), 
    .PSUB(PSUB), .VDD3I(VDDD), .GNDI(GNDD), .GNDOI(GNDOR), 
    .VDDOI(VDDOR), .VDDRI(VDDOR));

APR04DPC I22 ( .VDDRI(VDDORA), .VDD3I(VDDA), .VDDOI(VDDORA), 
    .PSUB(PSUB), .GNDRI(GNDORA), .GNDI(GNDA), .GNDOI(GNDORA), 
    .Y(inl_core), .PAD(INL));

APR00DPC I23 ( .VDD3I(VDDA), .VDDOI(VDDORA), .GNDRI(GNDORA), 
    .GNDI(GNDA), .PSUB(PSUB), .VDDRI(VDDORA), .GNDOI(GNDORA), 
    .PAD(OUTL));

HVDD4DJ5PKFs I24 ( .PAD(VDDHV), .GNDO(GNDOHV), .IGND(GNDHV));

HVDD4D2PK I36 ( .PAD(GNDHV), .GND(GNDOHV));

HVD4SJD1R5PKFs I33 ( .IGND(GNDHV), .GNDO(GNDOHV), .PAD(OUTHV));

endmodule
